{"version":3,"sources":["Components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","fixed","prop","useSpring","to","y","opacity","from","delay","useState","navbarOpen","setNavbarOpen","className","type","onClick","id","name","href","current","map","item","index","div","style","activeClassName","exact","App","props","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAKQ,SAASA,EAAT,GAA2B,EAATC,MAAU,IAM1BC,EAAOC,oBAAU,CAACC,GAAI,CAAEC,EAAG,EAAIC,QAAQ,GAAIC,KAAM,CAACF,EAAE,IAAKC,QAAQ,GAAIE,MAAM,MANlD,EAOKC,oBAAS,GAPd,mBAOxBC,EAPwB,KAOZC,EAPY,KAQ/B,OACI,mCACE,qBAAKC,UAAU,sFAAf,SACE,sBAAKA,UAAU,qEAAf,UACE,sBAAKA,UAAU,qFAAf,UACE,cAAC,IAAD,CACEA,UAAU,kGACVR,GAAG,gBAFL,kBAMA,wBACEQ,UAAU,yKACVC,KAAK,SACLC,QAAS,kBAAMH,GAAeD,IAHhC,SAKE,cAAC,IAAD,SAGJ,qBACEE,UACE,sCACCF,EAAa,QAAU,WAE1BK,GAAG,wBALL,SAOE,oBAAIH,UAAU,iDAAd,SAjCE,CACV,CAACI,KAAM,OAAQC,KAAM,gBAAiBC,SAAS,GAC/C,CAACF,KAAM,WAAYC,KAAM,sBAAuBC,SAAS,GACzD,CAACF,KAAM,WAAYC,KAAM,yBAA0BC,SAAS,GAC5D,CAACF,KAAM,aAAcC,KAAM,wBAAyBC,SAAS,IA8B1CC,KAAK,SAACC,EAAMC,GAAP,OAAe,oBAAIT,UAAU,WAAd,SAC/B,cAAC,WAASU,IAAV,CAAcC,MAAQrB,EAAtB,SACA,cAAC,IAAD,CAASU,UAAU,wGAAwGY,gBAAiB,YAAYC,OAAK,EAAErB,GAAIgB,EAAKH,KAAxK,SAAgLG,EAAKJ,yB,WCTtLU,MA5Bf,WACI,IAAMC,EAAQxB,oBAAU,CAACC,GAAI,CAACE,QAAS,GAAIC,KAAM,CAACD,QAAS,KAC3D,OAEI,sBAAKM,UAAU,2BAAf,UACI,cAACZ,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4B,KAAK,iBAAZ,SACI,cAAC,WAASN,IAAV,CAAcC,MAAOI,EAAOf,UAAU,MAAtC,SACI,6BAAK,qCAGb,cAAC,IAAD,CAAOgB,KAAK,sBAAZ,SACI,4BAEJ,cAAC,IAAD,CAAOA,KAAK,wBAAZ,SACI,8BAEJ,cAAC,IAAD,CAAOA,KAAK,yBAAZ,SACI,sCCZLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACF,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.18ddaa3f.chunk.js","sourcesContent":["import {useState} from \"react\";\nimport { FaBars } from 'react-icons/fa';\nimport { NavLink } from 'react-router-dom';\nimport {useSpring,animated} from \"react-spring\";\n\nexport  function Navbar({ fixed }) {\n    const items = [\n        {name: 'Home', href: '/PersonalSite', current: true},\n        {name: 'About me', href: '/PersonalSite/about', current: false},\n        {name: 'Projects', href: '/PersonalSite/projects', current: false},\n        {name: 'Contact me', href: '/PersonalSite/contact', current: false},]\n    const prop = useSpring({to: { y: 1 , opacity:1}, from: {y:100, opacity:0}, delay:1000});\n    const [navbarOpen, setNavbarOpen] = useState(false);\n    return (\n        <>\n          <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 bg-blueGray-500 mb-3\">\n            <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n              <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n                <NavLink\n                  className=\"text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase text-white\"\n                  to=\"/PersonalSite\"\n                >\n                  PDCV\n                </NavLink>\n                <button\n                  className=\"text-white cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n                  type=\"button\"\n                  onClick={() => setNavbarOpen(!navbarOpen)}\n                >\n                  <FaBars/>\n                </button>\n              </div>\n              <div\n                className={\n                  \"lg:flex flex-grow items-center col\" +\n                  (navbarOpen ? \" flex\" : \" hidden\")\n                }\n                id=\"example-navbar-danger\"\n              >\n                <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n                    {items.map( (item, index)=><li className=\"nav-item\">\n                <animated.div style ={prop}>\n                <NavLink className=\"ml-2 px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\" activeClassName =\"underline\" exact  to={item.href} >{item.name}</NavLink>\n               </animated.div>\n                </li>\n              )}\n\n\n                </ul>\n              </div>\n            </div>\n          </nav>\n        </>\n    );\n}\n\n","import './App.css';\nimport {animated, useSpring} from \"react-spring\";\nimport {Navbar} from \"./Components/Navbar\";\nimport {Route, Switch} from \"react-router-dom\";\n\nfunction App() {\n    const props = useSpring({to: {opacity: 1}, from: {opacity: 0},})\n    return (\n\n        <div className=\"min-h-screen bg-gray-900\">\n            <Navbar/>\n            <Switch>\n                <Route path=\"/PersonalSite/\">\n                    <animated.div style={props} className=\"App\">\n                        <h1>{\"<Paula del Castillo Vivero/>\"}</h1>\n                    </animated.div>\n                </Route>\n                <Route path=\"/PersonalSite/about\">\n                    <about/>\n                </Route>\n                <Route path=\"/PersonalSite/contact\">\n                    <contact/>\n                </Route>\n                <Route path=\"/PersonalSite/projects\">\n                    <projects/>\n                </Route>\n            </Switch>\n\n        </div>\n);\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n    <App />\n          </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}